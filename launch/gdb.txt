Breakpoint 1 at 0x2c8b8: lidar_publisher_node.cpp:1. (2 locations)
The program is not being run.
Undefined command: "brak".  Try "help".
Breakpoint 2 at 0xfb14: file /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp, line 14.
Starting program: /home/acms2/ros2_ws/install/sensor_integration_suite/lib/sensor_integration_suite/lidar_publisher_node --ros-args -r __node:=lidar_publisher_node_hz --params-file /tmp/launch_params_048iom0v
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
[New Thread 0xfffff6a1e9a0 (LWP 8889)]
[New Thread 0xfffff621d9a0 (LWP 8890)]
[New Thread 0xfffff59939a0 (LWP 8891)]
[New Thread 0xfffff51929a0 (LWP 8892)]
[New Thread 0xfffff49919a0 (LWP 8893)]
[New Thread 0xfffff41909a0 (LWP 8894)]
[New Thread 0xfffff398f9a0 (LWP 8895)]
[New Thread 0xfffff318e9a0 (LWP 8896)]
[New Thread 0xfffff288d9a0 (LWP 8897)]
[New Thread 0xfffff208c9a0 (LWP 8898)]

Thread 1 "lidar_publisher" hit Breakpoint 2, LidarPublisherNode::LidarPublisherNode (this=0xaaaaaab820b0)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp:14
14	        std::string lidar_uri;
15	        std::string topic_name;
16	        this->get_parameter("lidar_uri", lidar_uri);
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> > (this=0xffffffffe6f0, 
    __s=0xaaaaaaad2e18 "lidar_uri", __a=...)
    at /usr/include/c++/9/bits/basic_string.h:530
530	      : _M_dataplus(_M_local_data(), __a)
531	      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
LidarPublisherNode::LidarPublisherNode (this=0xaaaaaab820b0)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp:17
17	        this->get_parameter("topic_name", topic_name);
20	        lidar.set_dev_uri(lidar_uri);
LidarKit::set_dev_uri (this=0xaaaaaab82320, uri="/dev/ttyUSB0")
    at /home/acms2/ros2_ws/src/sensor_integration_suite/include/sensor_integration_suite/lidarkit.hpp:45
45	        dev_uri=uri;
46	        this->open_device();
LidarKit::open_device (this=0xaaaaaab82320)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidarkit.cpp:75
75	{
77	    this->fd = open(dev_uri.c_str(), O_RDONLY | O_NOCTTY);
78	    if (this->fd == -1) {
No locals.
$1 = 15
82	        fcntl(this->fd, F_SETFL, FNDELAY); // non-blocking mode (important for timeout)
85	        tcgetattr(this->fd, &options);
86	        cfsetispeed(&options, B230400); // set baud rate
87	        cfsetospeed(&options, B230400); // set baud rate
88	        options.c_cflag |= (CLOCAL | CREAD); // config for reading
89	        options.c_cflag &= ~CSIZE; // clear size flags
90	        options.c_cflag &= ~PARENB; // no parity bit
91	        options.c_cflag &= ~CSTOPB; // 1 stop bit
92	        options.c_cflag |= CS8; // 8-bit chars
93	        options.c_cc[VMIN] = 0; // timer begins immediately
Breakpoint 3 at 0xaaaaaaaaf474: file /home/acms2/ros2_ws/src/sensor_integration_suite/include/sensor_integration_suite/lidarkit.hpp, line 47.
Continuing.

Thread 1 "lidar_publisher" hit Breakpoint 3, LidarKit::set_dev_uri (
    this=0xaaaaaab82320, uri="/dev/ttyUSB0")
    at /home/acms2/ros2_ws/src/sensor_integration_suite/include/sensor_integration_suite/lidarkit.hpp:47
47	        if (this->fd == -1) throw std::exception();}
LidarPublisherNode::LidarPublisherNode (this=0xaaaaaab820b0)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp:21
21	        lidar.start();
LidarKit::start (this=0xaaaaaab82320)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidarkit.cpp:179
179	bool LidarKit::start() {
180	    if (this->is_running) {
$2 = {_M_base = {static _S_alignment = 1, _M_i = false}, 
  static is_always_lock_free = true}
184	    this->is_running = true;
185	    this->dev_thread = std::make_unique<std::thread>([this]() {
[New Thread 0xfffff17fc9a0 (LWP 9116)]
187	    });
185	    this->dev_thread = std::make_unique<std::thread>([this]() {
189	    return true;
190	}
LidarPublisherNode::LidarPublisherNode (this=0xaaaaaab820b0)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp:24
24	        publisher_ = this->create_publisher<sensor_msgs::msg::PointCloud2>(topic_name, 10);
27	        timer_ = this->create_wall_timer(
28	            std::chrono::milliseconds(100), // Adjust the rate as needed
27	        timer_ = this->create_wall_timer(
29	            std::bind(&LidarPublisherNode::publish_points, this));
27	        timer_ = this->create_wall_timer(
29	            std::bind(&LidarPublisherNode::publish_points, this));
27	        timer_ = this->create_wall_timer(
15	        std::string topic_name;
14	        std::string lidar_uri;
30	    }
__gnu_cxx::new_allocator<LidarPublisherNode>::construct<LidarPublisherNode> (
    this=0xffffffffe970, __p=0xaaaaaab820b0)
    at /usr/include/c++/9/ext/new_allocator.h:146
146		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
std::allocator_traits<std::allocator<LidarPublisherNode> >::construct<LidarPublisherNode> (__a=..., __p=0xaaaaaab820b0)
    at /usr/include/c++/9/bits/alloc_traits.h:483
483		{ __a.construct(__p, std::forward<_Args>(__args)...); }
std::_Sp_counted_ptr_inplace<LidarPublisherNode, std::allocator<LidarPublisherNode>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<>(std::allocator<LidarPublisherNode>) (this=0xaaaaaab820a0, __a=...)
    at /usr/include/c++/9/bits/shared_ptr_base.h:550
550		}
std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<LidarPublisherNode, std::allocator<LidarPublisherNode>>(LidarPublisherNode*&, std::_Sp_alloc_shared_tag<std::allocator<LidarPublisherNode> >) (this=0xffffffffeab8, 
    __p=@0xffffffffeab0: 0x0, __a=...)
    at /usr/include/c++/9/bits/shared_ptr_base.h:681
681		  __guard = nullptr;
682		  _M_pi = __pi;
Undefined command: "brak".  Try "help".
Breakpoint 4 at 0xaaaaaaaafee4: file /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp, line 34.
Continuing.

Thread 1 "lidar_publisher" hit Breakpoint 4, LidarPublisherNode::publish_points
    (this=0xaaaaaab820b0)
    at /home/acms2/ros2_ws/src/sensor_integration_suite/src/lidar_publisher_node.cpp:34
34	        std::this_thread::sleep_for(std::chrono::milliseconds(100));
35	        auto points = lidar.get_points();
36	        auto msg = convert_to_point_cloud2(points); // Implement this function
37	        publisher_->publish(msg);

Thread 1 "lidar_publisher" received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
50	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.
